import { h, HarmajaChild } from "harmaja"
import * as L from "lonna"
import { Item, newContainer, newSimilarNote, newText, Note } from "../../../../common/src/domain"
import { BoardFocus } from "../board-focus"

export const PaletteView = ({
    latestNote,
    addItem,
    focus,
}: {
    latestNote: L.Property<Note>
    addItem: (item: Item) => void
    focus: L.Atom<BoardFocus>
}) => {
    return (
        <span className="palette">
            <NewNote {...{ addItem, latestNote, focus }} />
            <NewContainer {...{ addItem, focus }} />
            <NewText {...{ addItem, focus }} />
        </span>
    )
}

export const NewText = ({ addItem: onAdd, focus }: { addItem: (i: Item) => void; focus: L.Atom<BoardFocus> }) => {
    const svg = () => (
        <svg width="44" height="49" viewBox="0 0 44 49" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0 9.5C0 8.94771 0.447715 8.5 1 8.5H39C39.5523 8.5 40 8.94772 40 9.5V32.5V47.5C40 48.0523 39.5523 48.5 39 48.5H25H1C0.447716 48.5 0 48.0523 0 47.5V9.5Z"
                fill="#E0E0E0"
            />
            <circle cx="36" cy="8.5" r="8" fill="#2F80ED" />
            <path
                d="M38.5309 8.816V8.002H36.4079V5.879H35.5939V8.002H33.4709V8.816H35.5939V10.939H36.4079V8.816H38.5309Z"
                fill="white"
            />
            <path
                d="M5.64004 26.5V19.4H6.54004V25.7H10.5V26.5H5.64004ZM13.5515 26.6C13.0315 26.6 12.5715 26.4767 12.1715 26.23C11.7782 25.9767 11.4715 25.6467 11.2515 25.24C11.0315 24.8267 10.9215 24.38 10.9215 23.9C10.9215 23.4133 11.0315 22.9667 11.2515 22.56C11.4782 22.1467 11.7882 21.8167 12.1815 21.57C12.5815 21.3167 13.0382 21.19 13.5515 21.19C14.0715 21.19 14.5282 21.3167 14.9215 21.57C15.3215 21.8167 15.6315 22.1467 15.8515 22.56C16.0782 22.9667 16.1915 23.4133 16.1915 23.9C16.1915 24.38 16.0782 24.8267 15.8515 25.24C15.6315 25.6467 15.3249 25.9767 14.9315 26.23C14.5382 26.4767 14.0782 26.6 13.5515 26.6ZM11.8215 23.91C11.8215 24.27 11.8982 24.5967 12.0515 24.89C12.2115 25.1833 12.4215 25.4167 12.6815 25.59C12.9415 25.7567 13.2315 25.84 13.5515 25.84C13.8715 25.84 14.1615 25.7533 14.4215 25.58C14.6882 25.4067 14.8982 25.1733 15.0515 24.88C15.2115 24.58 15.2915 24.25 15.2915 23.89C15.2915 23.53 15.2115 23.2033 15.0515 22.91C14.8982 22.6167 14.6882 22.3833 14.4215 22.21C14.1615 22.0367 13.8715 21.95 13.5515 21.95C13.2315 21.95 12.9415 22.04 12.6815 22.22C12.4215 22.3933 12.2115 22.6267 12.0515 22.92C11.8982 23.2133 11.8215 23.5433 11.8215 23.91ZM20.0179 22.05C19.5779 22.0567 19.1879 22.17 18.8479 22.39C18.5145 22.6033 18.2779 22.9 18.1379 23.28V26.5H17.2579V21.28H18.0779V22.49C18.2579 22.13 18.4945 21.84 18.7879 21.62C19.0879 21.3933 19.4012 21.2667 19.7279 21.24C19.7945 21.24 19.8512 21.24 19.8979 21.24C19.9445 21.24 19.9845 21.2433 20.0179 21.25V22.05ZM23.0835 26.6C22.5635 26.6 22.1035 26.4767 21.7035 26.23C21.3035 25.9833 20.9901 25.6533 20.7635 25.24C20.5368 24.8267 20.4235 24.3767 20.4235 23.89C20.4235 23.3967 20.5368 22.9467 20.7635 22.54C20.9901 22.1333 21.3035 21.8067 21.7035 21.56C22.1101 21.3133 22.5735 21.19 23.0935 21.19C23.6201 21.19 24.0768 21.3167 24.4635 21.57C24.8568 21.8167 25.1601 22.1433 25.3735 22.55C25.5935 22.95 25.7035 23.3833 25.7035 23.85C25.7035 23.9967 25.6968 24.11 25.6835 24.19H21.3535C21.3801 24.53 21.4735 24.8333 21.6335 25.1C21.8001 25.36 22.0135 25.5667 22.2735 25.72C22.5335 25.8667 22.8135 25.94 23.1135 25.94C23.4335 25.94 23.7335 25.86 24.0135 25.7C24.3001 25.54 24.4968 25.33 24.6035 25.07L25.3635 25.28C25.1968 25.6667 24.9068 25.9833 24.4935 26.23C24.0801 26.4767 23.6101 26.6 23.0835 26.6ZM21.3235 23.58H24.8835C24.8568 23.24 24.7601 22.94 24.5935 22.68C24.4268 22.42 24.2135 22.2167 23.9535 22.07C23.6935 21.9233 23.4068 21.85 23.0935 21.85C22.7868 21.85 22.5035 21.9233 22.2435 22.07C21.9835 22.2167 21.7701 22.42 21.6035 22.68C21.4435 22.94 21.3501 23.24 21.3235 23.58ZM34.5517 26.5H33.6717V23.58C33.6717 23.0333 33.5817 22.63 33.4017 22.37C33.2283 22.11 32.9683 21.98 32.6217 21.98C32.2683 21.98 31.9483 22.11 31.6617 22.37C31.375 22.6233 31.1717 22.9533 31.0517 23.36V26.5H30.1717V23.58C30.1717 23.0267 30.085 22.6233 29.9117 22.37C29.7383 22.11 29.4783 21.98 29.1317 21.98C28.785 21.98 28.465 22.1067 28.1717 22.36C27.885 22.6067 27.6817 22.9367 27.5617 23.35V26.5H26.6817V21.28H27.4817V22.4C27.695 22.0133 27.9717 21.7167 28.3117 21.51C28.6517 21.2967 29.035 21.19 29.4617 21.19C29.895 21.19 30.2417 21.31 30.5017 21.55C30.7617 21.7833 30.9217 22.0867 30.9817 22.46C31.4483 21.6133 32.1117 21.19 32.9717 21.19C33.3717 21.19 33.685 21.2867 33.9117 21.48C34.145 21.6667 34.3083 21.9267 34.4017 22.26C34.5017 22.5867 34.5517 22.96 34.5517 23.38V26.5ZM6.37895 32.3V31.2H7.25895V32.3H6.37895ZM6.37895 38.5V33.28H7.25895V38.5H6.37895ZM11.4936 38.6C11.067 38.6 10.687 38.4933 10.3536 38.28C10.0203 38.0667 9.75697 37.7967 9.56363 37.47V40.63H8.68363V33.28H9.46363V34.26C9.6703 33.94 9.9403 33.6833 10.2736 33.49C10.607 33.29 10.9703 33.19 11.3636 33.19C11.7236 33.19 12.0536 33.2633 12.3536 33.41C12.6536 33.5567 12.9136 33.7567 13.1336 34.01C13.3536 34.2633 13.5236 34.5533 13.6436 34.88C13.7703 35.2 13.8336 35.5367 13.8336 35.89C13.8336 36.3833 13.7336 36.8367 13.5336 37.25C13.3403 37.6633 13.067 37.9933 12.7136 38.24C12.3603 38.48 11.9536 38.6 11.4936 38.6ZM11.2236 37.84C11.5703 37.84 11.8703 37.7467 12.1236 37.56C12.377 37.3733 12.5736 37.13 12.7136 36.83C12.8603 36.53 12.9336 36.2167 12.9336 35.89C12.9336 35.5367 12.8536 35.2133 12.6936 34.92C12.5403 34.6267 12.327 34.3933 12.0536 34.22C11.787 34.04 11.4836 33.95 11.1436 33.95C10.937 33.95 10.717 34.0033 10.4836 34.11C10.257 34.2167 10.057 34.36 9.88363 34.54C9.71697 34.7133 9.6103 34.9067 9.56363 35.12V36.61C9.7103 36.9567 9.93363 37.25 10.2336 37.49C10.5403 37.7233 10.8703 37.84 11.2236 37.84ZM16.7041 38.6C16.2708 38.6 15.8641 38.53 15.4841 38.39C15.1041 38.2433 14.7774 38.0267 14.5041 37.74L14.8441 37.12C15.1441 37.4 15.4441 37.6 15.7441 37.72C16.0441 37.84 16.3508 37.9 16.6641 37.9C17.0241 37.9 17.3174 37.8333 17.5441 37.7C17.7708 37.56 17.8841 37.3567 17.8841 37.09C17.8841 36.8967 17.8241 36.7533 17.7041 36.66C17.5908 36.5667 17.4274 36.49 17.2141 36.43C17.0008 36.3633 16.7474 36.29 16.4541 36.21C15.9141 36.0567 15.5008 35.8767 15.2141 35.67C14.9341 35.4567 14.7941 35.1467 14.7941 34.74C14.7941 34.2467 14.9808 33.8667 15.3541 33.6C15.7341 33.3267 16.2174 33.19 16.8041 33.19C17.5908 33.19 18.2108 33.4267 18.6641 33.9L18.2641 34.51C17.8574 34.09 17.3541 33.88 16.7541 33.88C16.5741 33.88 16.3974 33.9033 16.2241 33.95C16.0508 33.99 15.9074 34.0667 15.7941 34.18C15.6808 34.2867 15.6241 34.44 15.6241 34.64C15.6241 34.8867 15.7241 35.0633 15.9241 35.17C16.1241 35.2767 16.4174 35.3867 16.8041 35.5C17.1974 35.6133 17.5374 35.7267 17.8241 35.84C18.1174 35.9533 18.3441 36.1 18.5041 36.28C18.6641 36.46 18.7441 36.71 18.7441 37.03C18.7441 37.5233 18.5574 37.91 18.1841 38.19C17.8108 38.4633 17.3174 38.6 16.7041 38.6ZM19.7469 36.41V33.28H20.6269V36.24C20.6269 37.3067 20.9969 37.84 21.7369 37.84C22.0969 37.84 22.4336 37.7267 22.7469 37.5C23.0669 37.2667 23.3036 36.95 23.4569 36.55V33.28H24.3369V37.5C24.3369 37.7067 24.4302 37.8133 24.6169 37.82V38.5C24.5169 38.5133 24.4369 38.52 24.3769 38.52C24.3236 38.5267 24.2702 38.53 24.2169 38.53C24.0502 38.53 23.9069 38.48 23.7869 38.38C23.6669 38.2733 23.6036 38.1433 23.5969 37.99L23.5769 37.38C23.3502 37.7667 23.0436 38.0667 22.6569 38.28C22.2769 38.4933 21.8602 38.6 21.4069 38.6C20.3002 38.6 19.7469 37.87 19.7469 36.41ZM33.6728 38.5H32.7928V35.58C32.7928 35.0333 32.7028 34.63 32.5228 34.37C32.3494 34.11 32.0894 33.98 31.7428 33.98C31.3894 33.98 31.0694 34.11 30.7828 34.37C30.4961 34.6233 30.2928 34.9533 30.1728 35.36V38.5H29.2928V35.58C29.2928 35.0267 29.2061 34.6233 29.0328 34.37C28.8594 34.11 28.5994 33.98 28.2528 33.98C27.9061 33.98 27.5861 34.1067 27.2928 34.36C27.0061 34.6067 26.8028 34.9367 26.6828 35.35V38.5H25.8028V33.28H26.6028V34.4C26.8161 34.0133 27.0928 33.7167 27.4328 33.51C27.7728 33.2967 28.1561 33.19 28.5828 33.19C29.0161 33.19 29.3628 33.31 29.6228 33.55C29.8828 33.7833 30.0428 34.0867 30.1028 34.46C30.5694 33.6133 31.2328 33.19 32.0928 33.19C32.4928 33.19 32.8061 33.2867 33.0328 33.48C33.2661 33.6667 33.4294 33.9267 33.5228 34.26C33.6228 34.5867 33.6728 34.96 33.6728 35.38V38.5Z"
                fill="black"
            />
        </svg>
    )
    return (
        <NewItem
            type="text"
            title="Text"
            tooltip="Drag to add new text area"
            svg={svg}
            focus={focus}
            createItem={newText}
            addItem={onAdd}
        />
    )
}

function lightenDarkenColor(col: string, amt: number) {
    var num = parseInt(col.replace("#", ""), 16)
    var r = (num >> 16) + amt
    var b = ((num >> 8) & 0x00ff) + amt
    var g = (num & 0x0000ff) + amt
    var newColor = g | (b << 8) | (r << 16)
    return "#" + newColor.toString(16)
}

export const NewNote = ({
    latestNote,
    addItem: onAdd,
    focus,
}: {
    latestNote: L.Property<Note>
    addItem: (i: Item) => void
    focus: L.Atom<BoardFocus>
}) => {
    const color = L.view(latestNote, "color")
    const cornerColor = L.view(color, (c) => lightenDarkenColor(c, -20))

    const noteColor = color
    const svg = () => (
        <svg width="44" height="49" viewBox="0 0 44 49" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0 9.5C0 8.94771 0.447715 8.5 1 8.5H39C39.5523 8.5 40 8.94772 40 9.5V32.1073C40 32.3597 39.9045 32.6028 39.7328 32.7878L33.5 39.5L25.296 48.1866C25.1071 48.3866 24.8441 48.5 24.569 48.5H1C0.447716 48.5 0 48.0523 0 47.5V9.5Z"
                fill={noteColor}
            />
            <path d="M26 32.5H40L25 48.5V33.5C25 32.9477 25.4477 32.5 26 32.5Z" fill={cornerColor} />
            <circle cx="36" cy="8.5" r="8" fill="#2F80ED" />
            <path
                d="M38.5309 8.816V8.002H36.4079V5.879H35.5939V8.002H33.4709V8.816H35.5939V10.939H36.4079V8.816H38.5309Z"
                fill="white"
            />
        </svg>
    )
    return (
        <NewItem
            type="note"
            title="Note"
            tooltip="Drag to add new text note"
            svg={svg}
            focus={focus}
            createItem={() => newSimilarNote(latestNote.get())}
            addItem={onAdd}
        />
    )
}

export const NewContainer = ({ addItem: onAdd, focus }: { addItem: (i: Item) => void; focus: L.Atom<BoardFocus> }) => {
    const svg = () => (
        <svg width="44" height="49" viewBox="0 0 44 49" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0.5 9.5C0.5 9.22386 0.723857 9 1 9H39C39.2761 9 39.5 9.22386 39.5 9.5V32.5V47.5C39.5 47.7761 39.2761 48 39 48H25H1C0.723858 48 0.5 47.7761 0.5 47.5V9.5Z"
                fill="white"
                stroke="#BDBDBD"
            />
            <circle cx="36" cy="8.5" r="8" fill="#2F80ED" />
            <path
                d="M38.5309 8.816V8.002H36.4079V5.879H35.5939V8.002H33.4709V8.816H35.5939V10.939H36.4079V8.816H38.5309Z"
                fill="white"
            />
        </svg>
    )
    return (
        <NewItem
            type="container"
            title="Area"
            tooltip="Drag to add new text note"
            svg={svg}
            focus={focus}
            createItem={newContainer}
            addItem={onAdd}
        />
    )
}

export const NewItem = ({
    type,
    title,
    tooltip,
    createItem,
    focus,
    svg,
    addItem,
}: {
    type: string
    title: string
    tooltip: string
    createItem: () => Item
    focus: L.Atom<BoardFocus>
    svg: () => HarmajaChild
    addItem: (i: Item) => void
}) => {
    const startAdd = (e: JSX.MouseEvent) => {
        focus.set({ status: "adding", element: svg(), item: createItem() })
        e.preventDefault()
        e.stopPropagation()
    }
    const onEndDrag = () => {
        addItem(createItem())
    }
    return (
        <span className={`new-item ${type}`} onClick={startAdd}>
            <span
                className="icon"
                data-test={`palette-new-${type}`}
                title={tooltip}
                onDragEnd={onEndDrag}
                draggable={true}
            >
                {svg()}
            </span>
            <span className="text">{title}</span>
        </span>
    )
}
