import { h, HarmajaChild } from "harmaja"
import * as L from "lonna"
import { Board, Item, newContainer, newSimilarNote, newText, Note } from "../../../../common/src/domain"
import { Dispatch } from "../../store/server-connection"

export const PaletteView = ({
    latestNote,
    onAdd,
    board,
    dispatch,
}: {
    latestNote: L.Property<Note>
    onAdd: (item: Item) => void
    board: L.Property<Board>
    dispatch: Dispatch
}) => {
    return (
        <span className="palette">
            <NewNote {...{ onAdd, latestNote }} />
            <NewContainer {...{ onAdd }} />
            <NewText {...{ onAdd }} />
        </span>
    )
}

export const NewText = ({ onAdd }: { onAdd: (i: Item) => void }) => {
    const svg = (
        <svg width="40" height="41" viewBox="0 0 40 41" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0 1.5C0 0.947714 0.447715 0.5 1 0.5H39C39.5523 0.5 40 0.947715 40 1.5V24.5V39.5C40 40.0523 39.5523 40.5 39 40.5H25H1C0.447716 40.5 0 40.0523 0 39.5V1.5Z"
                fill="#E0E0E0"
            />
            <path
                d="M5.64004 18.5V11.4H6.54004V17.7H10.5V18.5H5.64004ZM13.5515 18.6C13.0315 18.6 12.5715 18.4767 12.1715 18.23C11.7782 17.9767 11.4715 17.6467 11.2515 17.24C11.0315 16.8267 10.9215 16.38 10.9215 15.9C10.9215 15.4133 11.0315 14.9667 11.2515 14.56C11.4782 14.1467 11.7882 13.8167 12.1815 13.57C12.5815 13.3167 13.0382 13.19 13.5515 13.19C14.0715 13.19 14.5282 13.3167 14.9215 13.57C15.3215 13.8167 15.6315 14.1467 15.8515 14.56C16.0782 14.9667 16.1915 15.4133 16.1915 15.9C16.1915 16.38 16.0782 16.8267 15.8515 17.24C15.6315 17.6467 15.3249 17.9767 14.9315 18.23C14.5382 18.4767 14.0782 18.6 13.5515 18.6ZM11.8215 15.91C11.8215 16.27 11.8982 16.5967 12.0515 16.89C12.2115 17.1833 12.4215 17.4167 12.6815 17.59C12.9415 17.7567 13.2315 17.84 13.5515 17.84C13.8715 17.84 14.1615 17.7533 14.4215 17.58C14.6882 17.4067 14.8982 17.1733 15.0515 16.88C15.2115 16.58 15.2915 16.25 15.2915 15.89C15.2915 15.53 15.2115 15.2033 15.0515 14.91C14.8982 14.6167 14.6882 14.3833 14.4215 14.21C14.1615 14.0367 13.8715 13.95 13.5515 13.95C13.2315 13.95 12.9415 14.04 12.6815 14.22C12.4215 14.3933 12.2115 14.6267 12.0515 14.92C11.8982 15.2133 11.8215 15.5433 11.8215 15.91ZM20.0179 14.05C19.5779 14.0567 19.1879 14.17 18.8479 14.39C18.5145 14.6033 18.2779 14.9 18.1379 15.28V18.5H17.2579V13.28H18.0779V14.49C18.2579 14.13 18.4945 13.84 18.7879 13.62C19.0879 13.3933 19.4012 13.2667 19.7279 13.24C19.7945 13.24 19.8512 13.24 19.8979 13.24C19.9445 13.24 19.9845 13.2433 20.0179 13.25V14.05ZM23.0835 18.6C22.5635 18.6 22.1035 18.4767 21.7035 18.23C21.3035 17.9833 20.9901 17.6533 20.7635 17.24C20.5368 16.8267 20.4235 16.3767 20.4235 15.89C20.4235 15.3967 20.5368 14.9467 20.7635 14.54C20.9901 14.1333 21.3035 13.8067 21.7035 13.56C22.1101 13.3133 22.5735 13.19 23.0935 13.19C23.6201 13.19 24.0768 13.3167 24.4635 13.57C24.8568 13.8167 25.1601 14.1433 25.3735 14.55C25.5935 14.95 25.7035 15.3833 25.7035 15.85C25.7035 15.9967 25.6968 16.11 25.6835 16.19H21.3535C21.3801 16.53 21.4735 16.8333 21.6335 17.1C21.8001 17.36 22.0135 17.5667 22.2735 17.72C22.5335 17.8667 22.8135 17.94 23.1135 17.94C23.4335 17.94 23.7335 17.86 24.0135 17.7C24.3001 17.54 24.4968 17.33 24.6035 17.07L25.3635 17.28C25.1968 17.6667 24.9068 17.9833 24.4935 18.23C24.0801 18.4767 23.6101 18.6 23.0835 18.6ZM21.3235 15.58H24.8835C24.8568 15.24 24.7601 14.94 24.5935 14.68C24.4268 14.42 24.2135 14.2167 23.9535 14.07C23.6935 13.9233 23.4068 13.85 23.0935 13.85C22.7868 13.85 22.5035 13.9233 22.2435 14.07C21.9835 14.2167 21.7701 14.42 21.6035 14.68C21.4435 14.94 21.3501 15.24 21.3235 15.58ZM34.5517 18.5H33.6717V15.58C33.6717 15.0333 33.5817 14.63 33.4017 14.37C33.2283 14.11 32.9683 13.98 32.6217 13.98C32.2683 13.98 31.9483 14.11 31.6617 14.37C31.375 14.6233 31.1717 14.9533 31.0517 15.36V18.5H30.1717V15.58C30.1717 15.0267 30.085 14.6233 29.9117 14.37C29.7383 14.11 29.4783 13.98 29.1317 13.98C28.785 13.98 28.465 14.1067 28.1717 14.36C27.885 14.6067 27.6817 14.9367 27.5617 15.35V18.5H26.6817V13.28H27.4817V14.4C27.695 14.0133 27.9717 13.7167 28.3117 13.51C28.6517 13.2967 29.035 13.19 29.4617 13.19C29.895 13.19 30.2417 13.31 30.5017 13.55C30.7617 13.7833 30.9217 14.0867 30.9817 14.46C31.4483 13.6133 32.1117 13.19 32.9717 13.19C33.3717 13.19 33.685 13.2867 33.9117 13.48C34.145 13.6667 34.3083 13.9267 34.4017 14.26C34.5017 14.5867 34.5517 14.96 34.5517 15.38V18.5ZM6.37895 24.3V23.2H7.25895V24.3H6.37895ZM6.37895 30.5V25.28H7.25895V30.5H6.37895ZM11.4936 30.6C11.067 30.6 10.687 30.4933 10.3536 30.28C10.0203 30.0667 9.75697 29.7967 9.56363 29.47V32.63H8.68363V25.28H9.46363V26.26C9.6703 25.94 9.9403 25.6833 10.2736 25.49C10.607 25.29 10.9703 25.19 11.3636 25.19C11.7236 25.19 12.0536 25.2633 12.3536 25.41C12.6536 25.5567 12.9136 25.7567 13.1336 26.01C13.3536 26.2633 13.5236 26.5533 13.6436 26.88C13.7703 27.2 13.8336 27.5367 13.8336 27.89C13.8336 28.3833 13.7336 28.8367 13.5336 29.25C13.3403 29.6633 13.067 29.9933 12.7136 30.24C12.3603 30.48 11.9536 30.6 11.4936 30.6ZM11.2236 29.84C11.5703 29.84 11.8703 29.7467 12.1236 29.56C12.377 29.3733 12.5736 29.13 12.7136 28.83C12.8603 28.53 12.9336 28.2167 12.9336 27.89C12.9336 27.5367 12.8536 27.2133 12.6936 26.92C12.5403 26.6267 12.327 26.3933 12.0536 26.22C11.787 26.04 11.4836 25.95 11.1436 25.95C10.937 25.95 10.717 26.0033 10.4836 26.11C10.257 26.2167 10.057 26.36 9.88363 26.54C9.71697 26.7133 9.6103 26.9067 9.56363 27.12V28.61C9.7103 28.9567 9.93363 29.25 10.2336 29.49C10.5403 29.7233 10.8703 29.84 11.2236 29.84ZM16.7041 30.6C16.2708 30.6 15.8641 30.53 15.4841 30.39C15.1041 30.2433 14.7774 30.0267 14.5041 29.74L14.8441 29.12C15.1441 29.4 15.4441 29.6 15.7441 29.72C16.0441 29.84 16.3508 29.9 16.6641 29.9C17.0241 29.9 17.3174 29.8333 17.5441 29.7C17.7708 29.56 17.8841 29.3567 17.8841 29.09C17.8841 28.8967 17.8241 28.7533 17.7041 28.66C17.5908 28.5667 17.4274 28.49 17.2141 28.43C17.0008 28.3633 16.7474 28.29 16.4541 28.21C15.9141 28.0567 15.5008 27.8767 15.2141 27.67C14.9341 27.4567 14.7941 27.1467 14.7941 26.74C14.7941 26.2467 14.9808 25.8667 15.3541 25.6C15.7341 25.3267 16.2174 25.19 16.8041 25.19C17.5908 25.19 18.2108 25.4267 18.6641 25.9L18.2641 26.51C17.8574 26.09 17.3541 25.88 16.7541 25.88C16.5741 25.88 16.3974 25.9033 16.2241 25.95C16.0508 25.99 15.9074 26.0667 15.7941 26.18C15.6808 26.2867 15.6241 26.44 15.6241 26.64C15.6241 26.8867 15.7241 27.0633 15.9241 27.17C16.1241 27.2767 16.4174 27.3867 16.8041 27.5C17.1974 27.6133 17.5374 27.7267 17.8241 27.84C18.1174 27.9533 18.3441 28.1 18.5041 28.28C18.6641 28.46 18.7441 28.71 18.7441 29.03C18.7441 29.5233 18.5574 29.91 18.1841 30.19C17.8108 30.4633 17.3174 30.6 16.7041 30.6ZM19.7469 28.41V25.28H20.6269V28.24C20.6269 29.3067 20.9969 29.84 21.7369 29.84C22.0969 29.84 22.4336 29.7267 22.7469 29.5C23.0669 29.2667 23.3036 28.95 23.4569 28.55V25.28H24.3369V29.5C24.3369 29.7067 24.4302 29.8133 24.6169 29.82V30.5C24.5169 30.5133 24.4369 30.52 24.3769 30.52C24.3236 30.5267 24.2702 30.53 24.2169 30.53C24.0502 30.53 23.9069 30.48 23.7869 30.38C23.6669 30.2733 23.6036 30.1433 23.5969 29.99L23.5769 29.38C23.3502 29.7667 23.0436 30.0667 22.6569 30.28C22.2769 30.4933 21.8602 30.6 21.4069 30.6C20.3002 30.6 19.7469 29.87 19.7469 28.41ZM33.6728 30.5H32.7928V27.58C32.7928 27.0333 32.7028 26.63 32.5228 26.37C32.3494 26.11 32.0894 25.98 31.7428 25.98C31.3894 25.98 31.0694 26.11 30.7828 26.37C30.4961 26.6233 30.2928 26.9533 30.1728 27.36V30.5H29.2928V27.58C29.2928 27.0267 29.2061 26.6233 29.0328 26.37C28.8594 26.11 28.5994 25.98 28.2528 25.98C27.9061 25.98 27.5861 26.1067 27.2928 26.36C27.0061 26.6067 26.8028 26.9367 26.6828 27.35V30.5H25.8028V25.28H26.6028V26.4C26.8161 26.0133 27.0928 25.7167 27.4328 25.51C27.7728 25.2967 28.1561 25.19 28.5828 25.19C29.0161 25.19 29.3628 25.31 29.6228 25.55C29.8828 25.7833 30.0428 26.0867 30.1028 26.46C30.5694 25.6133 31.2328 25.19 32.0928 25.19C32.4928 25.19 32.8061 25.2867 33.0328 25.48C33.2661 25.6667 33.4294 25.9267 33.5228 26.26C33.6228 26.5867 33.6728 26.96 33.6728 27.38V30.5Z"
                fill="black"
            />
        </svg>
    )
    return (
        <NewItem
            type="text"
            title="Text"
            tooltip="Drag to add new text area"
            svg={svg}
            onDragEnd={() => onAdd(newText())}
        />
    )
}

export const NewItem = ({
    type,
    title,
    tooltip,
    onDragEnd,
    svg,
}: {
    type: string
    title: string
    tooltip: string
    onDragEnd: () => void
    svg: HarmajaChild
}) => {
    return (
        <span className={`new-item ${type}`}>
            <span
                className="icon"
                data-test={`palette-new-${type}`}
                title={tooltip}
                onDragEnd={onDragEnd}
                draggable={true}
            >
                {svg}
            </span>
            <span className="text">{title}</span>
            <svg
                className="plus-sign"
                width="16"
                height="17"
                viewBox="0 0 16 17"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <circle cx="8" cy="8.5" r="8" fill="#2F80ED" />
                <path
                    d="M10.5309 8.816V8.002H8.40786V5.879H7.59386V8.002H5.47086V8.816H7.59386V10.939H8.40786V8.816H10.5309Z"
                    fill="white"
                />
            </svg>
        </span>
    )
}

function lightenDarkenColor(col: string, amt: number) {
    var num = parseInt(col.replace("#", ""), 16)
    var r = (num >> 16) + amt
    var b = ((num >> 8) & 0x00ff) + amt
    var g = (num & 0x0000ff) + amt
    var newColor = g | (b << 8) | (r << 16)
    return "#" + newColor.toString(16)
}

export const NewNote = ({ latestNote, onAdd }: { latestNote: L.Property<Note>; onAdd: (i: Item) => void }) => {
    const color = L.view(latestNote, "color")
    const cornerColor = L.view(color, (c) => lightenDarkenColor(c, -20))

    const noteColor = color
    const svg = (
        <svg width="40" height="41" viewBox="0 0 40 41" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0 1.5C0 0.947714 0.447715 0.5 1 0.5H39C39.5523 0.5 40 0.947715 40 1.5V24.1073C40 24.3597 39.9045 24.6028 39.7328 24.7878L33.5 31.5L25.296 40.1866C25.1071 40.3866 24.8441 40.5 24.569 40.5H1C0.447716 40.5 0 40.0523 0 39.5V1.5Z"
                fill={noteColor}
            />
            <path d="M26 24.5H40L25 40.5V25.5C25 24.9477 25.4477 24.5 26 24.5Z" fill={cornerColor} />
        </svg>
    )
    return (
        <NewItem
            type="note"
            title="Note"
            tooltip="Drag to add new text note"
            svg={svg}
            onDragEnd={() => onAdd(newSimilarNote(latestNote.get()))}
        />
    )
}

export const NewContainer = ({ onAdd }: { onAdd: (i: Item) => void }) => {
    const svg = (
        <svg width="40" height="41" viewBox="0 0 40 41" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M0.5 1.5C0.5 1.22386 0.723857 1 1 1H39C39.2761 1 39.5 1.22386 39.5 1.5V24.5V39.5C39.5 39.7761 39.2761 40 39 40H25H1C0.723858 40 0.5 39.7761 0.5 39.5V1.5Z"
                fill="white"
                stroke="#BDBDBD"
            />
        </svg>
    )
    return (
        <NewItem
            type="container"
            title="Area"
            tooltip="Drag to add new text note"
            svg={svg}
            onDragEnd={() => onAdd(newContainer())}
        />
    )
}
